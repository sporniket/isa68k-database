Row ID	Mnemonic	Synopsys	Opcode	Supplemental Word #1	Supplemental Word #2	Domain	.b	.w	.l	Number of operands	Operand 1	Data Register Direct Mode	Address Register Direct Mode	Address Register Indirect Mode	Address Register Indirect with Postincrement Mode	Address Register Indirect with Predecrement Mode	Address Register Indirect with Displacement Mode	Address Register Indirect with Index (8-Bit Displacement) Mode	Address Register Indirect with Index (Base Displacement) Mode	Memory Indirect Postindexed Mode	Memory Indirect Preindexed Mode	Program Counter Indirect with Displacement Mode	Program Counter Indirect with Index (8-Bit Displacement) Mode	Program Counter Indirect with Index (Base Displacement) Mode	Program Counter Memory Indirect Postindexed Mode	Program Counter Memory Indirect Preindexed Mode	Absolute Short Addressing Mode	Absolute Long Addressing Mode	Immediate Data	Signed value	Operand 2	Data Register Direct Mode	Address Register Direct Mode	Address Register Indirect Mode	Address Register Indirect with Postincrement Mode	Address Register Indirect with Predecrement Mode	Address Register Indirect with Displacement Mode	Address Register Indirect with Index (8-Bit Displacement) Mode	Address Register Indirect with Index (Base Displacement) Mode	Memory Indirect Postindexed Mode	Memory Indirect Preindexed Mode	Program Counter Indirect with Displacement Mode	Program Counter Indirect with Index (8-Bit Displacement) Mode	Program Counter Indirect with Index (Base Displacement) Mode	Program Counter Memory Indirect Postindexed Mode	Program Counter Memory Indirect Preindexed Mode	Absolute Short Addressing Mode	Absolute Long Addressing Mode	Immediate Data	Signed value	Operand 3	Data Register Direct Mode	Address Register Direct Mode	Address Register Indirect Mode	Address Register Indirect with Postincrement Mode	Address Register Indirect with Predecrement Mode	Address Register Indirect with Displacement Mode	Address Register Indirect with Index (8-Bit Displacement) Mode	Address Register Indirect with Index (Base Displacement) Mode	Memory Indirect Postindexed Mode	Memory Indirect Preindexed Mode	Program Counter Indirect with Displacement Mode	Program Counter Indirect with Index (8-Bit Displacement) Mode	Program Counter Indirect with Index (Base Displacement) Mode	Program Counter Memory Indirect Postindexed Mode	Program Counter Memory Indirect Preindexed Mode	Absolute Short Addressing Mode	Absolute Long Addressing Mode	Immediate Data	Brief description	020+ only	020 only	Exclude 68000	Exclude 040	68000+68008 only	040 only
1	ANDI	ANDI #<data>,SR	0000.001.001.111.100					x		2																			16		SR																																							If Supervisor State Then Source Λ SR → SR ELSE TRAP						
2	CINV	CINVL <caches>,(An)	1111.010.0cc.001.nnn							2	caches																				x			x																																				If Supervisor State Then Invalidate Selected Cache Lines ELSE TRAP						x
3	CINV	CINVP <caches>,(An)	1111.010.0cc.010.nnn							2	caches																				x			x																																				If Supervisor State Then Invalidate Selected Cache Lines ELSE TRAP						x
4	CINV	CINVA <caches>	1111.010.0cc.011.nnn							1	caches																																																											If Supervisor State Then Invalidate Selected Cache Lines ELSE TRAP						x
5	cpRESTORE	cpRESTORE <ea>	1111.ppp.101.eee.aaa							1	x			x	x		x	x	x	x	x	x	x	x	x	x	x	x	x																																									If Supervisor State Then Restore Internal State of Coprocessor ELSE TRAP	x			x		
6	cpSAVE	cpSAVE <ea>	1111.ppp.100.eee.aaa							1	x			x		x	x	x	x	x	x						x	x																																										If Supervisor State Then Save Internal State of Coprocessor ELSE TRAP	x			x		
7	CPUSH	CPUSHL <caches>,(An)	1111.010.0cc.101.nnn							2	caches																				x			x																																				If Supervisor State Then { If Data Cache Then { Push Selected Dirty Data Cache Lines ; Invalidate Selected Cache Lines } } ELSE TRAP						x
8	CPUSH	CPUSHP <caches>,(An)	1111.010.0cc.110.nnn							2	caches																				x			x																																				If Supervisor State Then { If Data Cache Then { Push Selected Dirty Data Cache Lines ; Invalidate Selected Cache Lines } } ELSE TRAP						x
9	CPUSH	CPUSHA <caches>	1111.010.0cc.111.nnn							1	caches																																																											If Supervisor State Then { If Data Cache Then { Push Selected Dirty Data Cache Lines ; Invalidate Selected Cache Lines } } ELSE TRAP						x
10	EORI	EORI #<data>,SR	0000.101.001.111.100					x		2																			16		SR																																							If Supervisor State Then Source ⊕ SR → SR ELSE TRAP						
11	MOVE	MOVE SR,<ea>	0100.000.011.eee.aaa					x		2	SR																				x	x		x	x	x	x	x	x	x	x						x	x																						If Supervisor State Then SR → Destination Else TRAP						
12	MOVE	MOVE <ea>,SR	0100.011.011.eee.aaa					x		2	x	x		x	x	x	x	x	x	x	x	x	x	x	x	x	x	x	x		SR																																							If Supervisor State Then Source → SR Else TRAP						
13	MOVE	MOVE USP,An	0100.111.001.101.nnn						x	2	USP																				x		x																																					If Supervisor State Then USP → An Else TRAP						
14	MOVE	MOVE An,USP	0100.111.001.100.nnn						x	2	x		x																		USP																																							If Supervisor State Then An → USP Else TRAP						
15	MOVEC	MOVEC Rc,Rn	0100.111.001.111.010	R.nnn.ccc.ccc.ccc					x	2	control register																					x	x																																					If Supervisor State Then Rc → Rn Else TRAP			x			
16	MOVEC	MOVEC Rn,Rc	0100.111.001.111.011	R.nnn.ccc.ccc.ccc					x	2		x	x																		control register																																							If Supervisor State Then Rn → Rc Else TRAP			x			